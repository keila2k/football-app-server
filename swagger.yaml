tags:
- name: standings
  description: standings API

paths:
# [GET] standings
  /users:
    get:
      tags:
      - standings
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] standings
    post:
      tags:
      - standings
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/standings'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] standings/id
  /users/{id}:
    get:
      tags:
      - standings
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] standings/id
    put:
      tags:
      - standings
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/standings'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] standings/id
    delete:
      tags:
      - standings
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      id:
        description: user Id
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

schemes:
 - https
 - http
